## 
## A set of useful functions
##

# solution from http://superuser.com/questions/490425/how-do-i-switch-between-java-7-and-java-6-on-os-x-10-8-2
# format: 
## setjdk 1.6
## setjdk 1.7
## setjdk 1.8
function setjdk() {
  if [ $# -ne 0 ]; then
    removeFromPath '/System/Library/Frameworks/JavaVM.framework/Home/bin'
    if [ -n "${JAVA_HOME+x}" ]; then
      removeFromPath "$JAVA_HOME"
    fi
    export JAVA_HOME=$(/usr/libexec/java_home -v "$@")
    export PATH="$JAVA_HOME/bin:$PATH"
  fi  
  echo "JAVA_HOME set to $JAVA_HOME"
  java -version
}

function removeFromPath() {
  export PATH=$(echo "$PATH" | sed -E -e "s;:$1;;" -e "s;$1:?;;")
}

function abspath() {
  echo $(cd $(dirname "$1"); pwd)/$(basename "$1")
}

function meeting_note() {
  if [ -e "$1" ]; then
    echo "" >> $1
  fi
  echo "=== $(date) ===" >> $1
  vim $1
}

function parn() {
  if [[ "$1" == *[!0-9]* ]]; then 
    echo "Unable to run tasks, first input must be a number"
    return 1
  fi
  tasks=$1
  shift

  args="$@"
  par=$(echo "2 * `sysctl hw.ncpu | awk '{print $2}'` " | bc)

  seq $tasks | xargs -n 1 -P $par bash -c "$args" bash
}

function runn() {
  if [[ "$1" == *[!0-9]* ]]; then 
    echo "Unable to run tasks, first input must be a number"
    return 1
  fi
  tasks=$1
  shift

  args="$@"

  seq $tasks | xargs -n 1 bash -c "$args" bash
}

function ps1GitOnly() {
  local ps1="\$ "
  
  ## display git branch if git_ps1 is usable
  if [ -f ~/.git-prompt.sh ]; then
    source ~/.git-prompt.sh
    GIT_PROMPT='$(__git_ps1 "(%s)")'
    ps1="${bldcyn}${GIT_PROMPT}${txtrst} ${ps1}"
  fi
  PS1="\[\033k\033\\$ps1"
}

function script-gen() {
  local name="$1"
  cat <<EOF > "$name"
#!/usr/bin/env bash

set -e

main() {
}

main "\$@"
EOF

  chmod a+x "$name"
}

alias curl-json="curl -X POST -H'Content-Type: application/json'"
alias ltree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' | less"
alias grep='grep --color'
alias time=/usr/bin/time

## Sets up screen to print out detached screens
if [ "$PS1" != "" ] ; then
  POSTFIX=""
  ## enables screen to see what application is launched
  POSTFIX="\[\033k\033\\"

  ## display git branch if git_ps1 is usable
  if [ -f ~/.git-prompt.sh ]; then
    source ~/.git-prompt.sh
    GIT_PROMPT='$(__git_ps1 "(%s)")'
    POSTFIX="${POSTFIX} ${bldcyn}${GIT_PROMPT}${txtrst}"
  fi

  #echo "'$POSTFIX'"
  #export PS1="[\u@\h \w]"'\[\033k\033\\\]\$  '
  export PS1="[\u@\h \w]\n${POSTFIX} \$ "
fi

## show Detached screens when you launch screen
if [ -e /usr/bin/screen ]; then
  if [ "$TERM" = "screen" -a ! "$SHOWED_SCREEN_MESSAGE" = "true" ]; then
    detached_screens=`/usr/bin/screen -list | grep Detached`
    if [ ! -z "$detached_screens" ]; then
      echo "+---------------------------------------+"
      echo "| Detached screens are available:       |"
      echo "$detached_screens"
      echo "+---------------------------------------+"
    else
      echo "[ screen is activated ]"
    fi
    export SHOWED_SCREEN_MESSAGE="true"
  fi
fi

# set bash to use vi mode rather than emacs mode
set -o vi
