## 
## A set of useful functions
##

function meeting_note() {
  if [ -e "$1" ]; then
    echo "" >> $1
  fi
  echo "=== $(date) ===" >> $1
  vim $1
}

function parn() {
  if [[ "$1" == *[!0-9]* ]]; then 
    echo "Unable to run tasks, first input must be a number"
    return 1
  fi
  tasks=$1
  shift

  args="$@"
  par=$(echo "2 * `sysctl hw.ncpu | awk '{print $2}'` " | bc)

  seq $tasks | xargs -n 1 -P $par bash -c "$args" bash
}

function runn() {
  if [[ "$1" == *[!0-9]* ]]; then 
    echo "Unable to run tasks, first input must be a number"
    return 1
  fi
  tasks=$1
  shift

  args="$@"

  seq $tasks | xargs -n 1 bash -c "$args" bash
}

## Sets up screen to print out detached screens
if [ "$PS1" != "" ] ; then
  POSTFIX=""
  ## enables screen to see what application is launched
  POSTFIX="\[\033k\033\\"

  ## display git branch if git_ps1 is usable
  if [ -f ~/.git-prompt.sh ]; then
    source ~/.git-prompt.sh
    GIT_PROMPT='$(__git_ps1 "(%s)")'
    POSTFIX="${POSTFIX} ${bldcyn}${GIT_PROMPT}${txtrst}"
  fi

  #echo "'$POSTFIX'"
  #export PS1="[\u@\h \w]"'\[\033k\033\\\]\$  '
  export PS1="[\u@\h \w]${POSTFIX} \$ "

fi

## show Detached screens when you launch screen
if [ -e /usr/bin/screen ]; then
  if [ "$TERM" = "screen" -a ! "$SHOWED_SCREEN_MESSAGE" = "true" ]; then
    detached_screens=`/usr/bin/screen -list | grep Detached`
    if [ ! -z "$detached_screens" ]; then
      echo "+---------------------------------------+"
      echo "| Detached screens are available:       |"
      echo "$detached_screens"
      echo "+---------------------------------------+"
    else
      echo "[ screen is activated ]"
    fi
    export SHOWED_SCREEN_MESSAGE="true"
  fi
fi

